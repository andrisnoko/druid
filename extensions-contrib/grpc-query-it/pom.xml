<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<!-- Build and run the grpc-query integration tests. The ITs must be in a distinct
     package because they depend on the integration-test-ex/cases module which is
     built after distribution, so this module must also be built after distribution.
     To run the tests:

     * Do a full Druid build: it.sh build
       The full build creates the grpc-query-<version>.tar.gz file which
       this module uses. It also creates the test protobuf jar which this
       module also uses.
     * Build the Docker image: it.sh image
     * Build and run the ITs here with
       it.sh test GrpcQuery extensions-contrib/grpc-query-it

     To debug the tests do the following:
     it.sh up GrpcQuery extensions-contrib/grpc-query-it
     Then run the tests in an IDE.

     See notes in the file for how the pieces fit together.
     -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.druid.extensions.contrib</groupId>
  <artifactId>grpc-query-it</artifactId>
  <name>grpc-query-it</name>
  <description>grpc-query integration tests</description>

  <parent>
    <groupId>org.apache.druid</groupId>
    <artifactId>druid</artifactId>
    <version>26.0.0-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <properties>
    <!-- Selects which IT to run. This module has only GrpcQuery, but we want
         to ignore the tests here if the user runs some other category. -->
    <it.category>MustSetACategory</it.category>
    <!-- The non-Maven scripts need to know where the base scripts reside. -->
    <it.base.dir>../../integration-tests-ex/cases</it.base.dir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.druid.integration-tests</groupId>
      <artifactId>druid-it-cases</artifactId>
      <version>${project.parent.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.druid.extensions.contrib</groupId>
      <artifactId>grpc-query</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.druid.extensions.contrib</groupId>
      <artifactId>grpc-query</artifactId>
      <version>${project.parent.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pl.pragmatists</groupId>
      <artifactId>JUnitParams</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <!-- The IT profile lives in this project. In practice, the required order of execution is:
         * Do a build
         * Build the Druid distribution
         * Build an image
         * Start the cluster
         * Run the IT
         * Stop the cluster
         Because of that, the IT profile cannot be activated as part of a full build. Instead,
         we do the distribution build in one pass, then do the ITs via scripts as a second
         pass.

         Note that this test requires specialized cluster setup as specified in the setup.sh
         script called from the `it.sh up` command. That is, cluster setup is done outside of
         Maven.
         -->
    <profile>
      <id>IT-GrpcQuery</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <it.category>GrpcQuery</it.category>
      </properties>
    </profile>
    <profile>
      <id>IT-GrpcQueryBasicAuth</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <it.category>GrpcQueryBasicAuth</it.category>
      </properties>
    </profile>
    <!-- Run the actual IT tests using the one-and-only test category declared above. -->
    <profile>
      <id>docker-tests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
           <!-- ITs run using Failsafe: the IT variation of surefire. -->
           <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.0.0-M7</version>
            <dependencies>
              <!-- Required to force Failsafe to use JUnit instead of TestNG.
                   junit47 is required to use test categories. -->
              <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit47</artifactId>
                <version>3.0.0-M7</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>functional-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <!-- Turning on logs so that travis does not time out tests for not providing any output.  -->
                  <redirectTestOutputToFile>False</redirectTestOutputToFile>
                  <!-- Can run only one test category per Maven run. -->
                  <groups>org.apache.druid.testsEx.categories.${it.category}</groups>
                 </configuration>
              </execution>
              <execution>
                <id>verify</id>
                <phase>verify</phase>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!-- Exclude ITs from surefire. Required because they end with "Test". -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/IT*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
            <!--
              ~ The analysis gets confused between javax.xml.bind:jaxb-api and jakarta.xml.bind:jakarta.xml.bind-api.
              ~ The latter is a transitive dependency of jackson 2.10+.
              -->
             <ignoredUsedUndeclaredDependencies>
               <ignoredUsedUndeclaredDependency>org.glassfish.hk2.external:jakarta.inject</ignoredUsedUndeclaredDependency>
            </ignoredUsedUndeclaredDependencies>
            <!-- Dynamically loaded. -->
            <ignoredUnusedDeclaredDependencies>
              <ignoredUnusedDeclaredDependency>mysql:mysql-connector-java:jar</ignoredUnusedDeclaredDependency>
            </ignoredUnusedDeclaredDependencies>
        </configuration>
      </plugin>
      <!-- ITs do not ship with the product: no reason to run vulnerability checks. -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
   </build>

</project>
