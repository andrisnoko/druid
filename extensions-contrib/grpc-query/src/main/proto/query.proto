// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_package = "org.druid.grpc.proto";

package druidGrpc;

service Query {
  rpc SubmitQuery (QueryRequest) returns (QueryResponse) {}
}

enum QueryResultFormat {
  CSV = 0;
  JSON_OBJECT = 1;
  JSON_ARRAY = 2;
  JSON_OBJECT_LINES = 3;
  JSON_ARRAY_LINES = 4;
  PROTOBUF_INLINE = 5;
  PROTOBUF_RESPONSE = 6;
}

message QueryParameter {
  oneof value {
    bool nullValue = 1;
    string stringValue = 2;
    sint64 longValue = 3;
    double doubleValue = 4;
    StringArray arrayValue = 5;
  }
}

message StringArray {
  repeated string value = 1;
}

message QueryRequest {
  string query = 1;
  QueryResultFormat resultFormat = 2;
  map<string, string> context = 3;
  repeated QueryParameter parameters = 4;
  optional string responseMessage = 5;
}

enum QueryStatus {
  OK = 0;
  UNAUTHORIZED = 1;
  INVALID_SQL = 2;
  RUNTIME_ERROR = 3;
}

enum DruidType {
  STRING = 0;
  LONG = 1;
  DOUBLE = 2;
  FLOAT = 3;
  STRING_ARRAY = 4;
  LONG_ARRAY = 5;
  DOUBLE_ARRAY = 6;
  FLOAT_ARRAY = 7;
  COMPLEX = 8;
}

message ColumnSchema {
  string name = 1;
  string sqlType = 2;
  DruidType druidType = 3;
}

message QueryResponse {
  string queryId = 1;
  QueryStatus status = 2;
  optional string errorMessage = 3;
  repeated ColumnSchema columns = 4;
  optional bytes data = 5;
}
